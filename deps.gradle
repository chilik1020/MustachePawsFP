ext {
    def gradleVersion = '4.0.2'
    build = [
            gradle: "com.android.tools.build:gradle:$gradleVersion"
    ]

    def kotlinVersion = '1.4.10'
    kotlinDeps = [
            kotlinGradlePlugin: "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion",
            kotlinStdlib      : "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion",
            kotlinAllopen     : "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion",
            kotlinTest        : "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    ]

    def materialVersion = '1.2.1'
    material = "com.google.android.material:material:$materialVersion"

    def googleMapsApiVersion = '3.1.0-beta'
    googleMapsApi = "com.google.android.libraries.maps:maps:$googleMapsApiVersion"

    def coreKtxVersion = '1.3.2'
    def appCompatVersion = '1.2.0'
    def constraintLayoutVersion = '2.0.4'
    def recyclerViewVersion = "1.1.0"
    def cardViewVersion = "1.0.0"
    def fragmentKtxVersion = '1.2.4'
    def lifecycleVersion = "2.2.0"
    androidxDeps = [
            coreKtx         : "androidx.core:core-ktx:$coreKtxVersion",
            appCompat       : "androidx.appcompat:appcompat:$appCompatVersion",
            constraintlayout: "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",
            recyclerView    : "androidx.recyclerview:recyclerview:$recyclerViewVersion",
            cardView        : "androidx.cardview:cardview:$cardViewVersion",
            fragmentKtx     : "androidx.fragment:fragment-ktx:$fragmentKtxVersion",
            lifeCycle       : "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
//            viewModel       : "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion",
//            liveData        : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion",
    ]

    def navigationVersion = '2.3.0-alpha01'
    navigation = [
            runtime       : "androidx.navigation:navigation-runtime:$navigationVersion",
            runtimeKtx    : "androidx.navigation:navigation-runtime-ktx:$navigationVersion",
            fragment      : "androidx.navigation:navigation-fragment:$navigationVersion",
            fragmentKtx   : "androidx.navigation:navigation-fragment-ktx:$navigationVersion",
            testing       : "androidx.navigation:navigation-testing:$navigationVersion",
            ui            : "androidx.navigation:navigation-ui:$navigationVersion",
            uiKtx         : "androidx.navigation:navigation-ui-ktx:$navigationVersion",
            safeArgsPlugin: "androidx.navigation:navigation-safe-args-gradle-plugin:$navigationVersion"
    ]


    def coroutinesVersion = '1.3.7'
    coroutines = [
            coroutinesAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion",
            coroutinesTest   : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    ]

    def rxAndroidVersion = '2.0.1'
    def rxJava2Version = '2.1.3'
    rx = [
            rxAndroid: "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion",
            rxJava2  : "io.reactivex.rxjava2:rxjava:$rxJava2Version"
    ]

    def daggerVersion = '2.28'
    dagger = [
            runtime               : "com.google.dagger:dagger:$daggerVersion",
            compiler              : "com.google.dagger:dagger-compiler:$daggerVersion",
            android               : "com.google.dagger:dagger-android:$daggerVersion",
            androidSupport        : "com.google.dagger:dagger-android-support:$daggerVersion",
            androidSupportCompiler: "com.google.dagger:dagger-android-processor:$daggerVersion"
    ]

    def toothPickVersion = '3.1.0'
    toothPick = [
            smoothie        : "com.github.stephanenicolas.toothpick:smoothie:$toothPickVersion",
            androidx        : "com.github.stephanenicolas.toothpick:smoothie-androidx:$toothPickVersion",
            lifecycle       : "com.github.stephanenicolas.toothpick:smoothie-lifecycle:$toothPickVersion",
            lifecycle_ktp   : "com.github.stephanenicolas.toothpick:smoothie-lifecycle-ktp:$toothPickVersion",
            viewmodel       : "com.github.stephanenicolas.toothpick:smoothie-lifecycle-viewmodel:$toothPickVersion",
            viewmodel_ktp   : "com.github.stephanenicolas.toothpick:smoothie-lifecycle-viewmodel-ktp:$toothPickVersion",
            smoothie_support: "com.github.stephanenicolas.toothpick:smoothie-support:$toothPickVersion",
            core            : "com.github.stephanenicolas.toothpick:toothpick:$toothPickVersion",
            runtime         : "com.github.stephanenicolas.toothpick:toothpick-runtime:$toothPickVersion",
            ktp             : "com.github.stephanenicolas.toothpick:ktp:$toothPickVersion",
            compiler        : "com.github.stephanenicolas.toothpick:toothpick-compiler:$toothPickVersion",
            testing         : "com.github.stephanenicolas.toothpick:toothpick-testing:$toothPickVersion",
            testing_junit4  : "com.github.stephanenicolas.toothpick:toothpick-testing-junit4:$toothPickVersion",
            testing_junit5  : "com.github.stephanenicolas.toothpick:toothpick-testing-junit5:$toothPickVersion",
    ]

    def koinVersion = '2.2.1'
    koin = [
            // Koin for Kotlin
            core               : "org.koin:koin-core:$koinVersion",
            // Koin Extended & experimental features
            coreExt            : "org.koin:koin-core-ext:$koinVersion",
            // Koin for Android
            android            : "org.koin:koin-android:$koinVersion",
            // Koin AndroidX Scope features
            androidxScope      : "org.koin:koin-androidx-scope:$koinVersion",
            // Koin AndroidX ViewModel features
            androidxViewModel  : "org.koin:koin-androidx-viewmodel:$koinVersion",
            // Koin AndroidX Fragment features
            androidxFragment   : "org.koin:koin-androidx-fragment:$koinVersion",
            // Koin AndroidX WorkManager
            androidxWorkManager: "org.koin:koin-androidx-workmanager:$koinVersion",
            // Koin AndroidX Jetpack Compose
            androidxCompose    : "org.koin:koin-androidx-compose:$koinVersion",
            // Koin AndroidX Experimental features
            androidxExt        : "org.koin:koin-androidx-ext:$koinVersion",
    ]

    def roomVersion = '2.3.0-alpha01'
    room = [
            runtime : "androidx.room:room-runtime:$roomVersion",
            compiler: "androidx.room:room-compiler:$roomVersion",
            ktx     : "androidx.room:room-ktx:$roomVersion",
            rxjava2 : "androidx.room:room-rxjava2:$roomVersion",
            testing : "androidx.room:room-testing:$roomVersion"
    ]

    def retrofitVersion = '2.9.0'
    def retrofitCoroutineAdapterVersion = '1.0.0'
    retrofit = [
            runtime                    : "com.squareup.retrofit2:retrofit:$retrofitVersion",
            gson                       : "com.squareup.retrofit2:converter-gson:$retrofitVersion",
            mock                       : "com.squareup.retrofit2:retrofit-mock:$retrofitVersion",
            adapterRxJava2             : "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion",
            adapterCoroutineJakeWharton: "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:$retrofitCoroutineAdapterVersion",
            moshi                      : "com.squareup.retrofit2:converter-moshi:$retrofitVersion",
            simpleXml                  : "com.squareup.retrofit2:converter-simplexml:$retrofitVersion"
    ]
    def okHttpLoggingInterceptorVersion = '3.9.0'
    okhttpLoggingInterceptor = "com.squareup.okhttp3:logging-interceptor:$okHttpLoggingInterceptorVersion"

    def glideVersion = '4.10.0'
    glide = [
            runtime : "com.github.bumptech.glide:glide:$glideVersion",
            compiler: "com.github.bumptech.glide:compiler:$glideVersion"
    ]

    def expendableTextViewVersion = "1.0.5"
    expendableTextView = "at.blogc:expandabletextview:$expendableTextViewVersion"

    def yandexMapsVersion = '4.0.0-lite'
    yandexMaps = "com.yandex.android:maps.mobile:$yandexMapsVersion"

    def uCropVersion = '2.2.5'
    uCrop = "com.github.yalantis:ucrop:$uCropVersion"

    // TEST dependencies
    def jUnitVersion = '4.12'
    def testCoreVersion = '1.2.0'
    def testExtJunitVersion = '1.1.1'
    def testRunnerVersion = '1.2.0'
    def testRulesVersion = '1.2.0'
    def mockitoVersion = '2.25.0'
    def mockitoAllVersion = '1.10.19'
    def mockitoAndroidVersion = '2.25.0'
    def mockWebServerVersion = '3.8.1'
    def espressoVersion = '3.2.0'
    def robolectricVersion = '4.2'
    def hamcrestVersion = "1.3"
    atsl = [
            jUnit   : "junit:junit:$jUnitVersion",
            core    : "androidx.test:core:$testCoreVersion",
            extJunit: "androidx.test.ext:junit:$testExtJunitVersion",
            runner  : "androidx.test:runner:$testRunnerVersion",
            rules   : "androidx.test:rules:$testRulesVersion"
    ]

    hamcrest = "org.hamcrest:hamcrest-all:$hamcrestVersion"

    mockito = [
            mockitoCore   : "org.mockito:mockito-core:$mockitoVersion",
            mockitoAll    : "org.mockito:mockito-all:$mockitoAllVersion",
            mockitoAndroid: "org.mockito:mockito-android:$mockitoAndroidVersion"
    ]

    mock_web_server = "com.squareup.okhttp3:mockwebserver:$mockWebServerVersion"

    espresso = [
            core   : "androidx.test.espresso:espresso-core:$espressoVersion",
            contrib: "androidx.test.espresso:espresso-contrib:$espressoVersion",
            intents: "androidx.test.espresso:espresso-intents:$espressoVersion"
    ]

    robolectric = "org.robolectric:robolectric:$robolectricVersion"
}